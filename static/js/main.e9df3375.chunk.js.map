{"version":3,"sources":["components/Todo/TodoList.module.css","components/Counter/Counter.module.css","components/ColorPicker/ColorPicker.module.css","components/Layout/Layout.module.css","components/Layout/Layout.js","components/ColorPicker/ColorPicker.js","components/Counter/Counter.js","components/Todo/TodoList.js","components/Todo/TodoEditor.js","components/Todo/Todo.js","App.js","index.js"],"names":["module","exports","Layout","children","className","s","container","Component","TodoList","todos","onDelete","onToggleCompleted","length","map","id","text","completed","itemListCompleted","itemList","controlsWrap","type","onChange","checked","onClick","TodoEditor","state","message","handleChangeMessage","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","todoEditorWrap","this","textArea","placeholder","disabled","Todo","addTodo","newTodo","uuidv4","deleteTodo","filter","todoId","toggleCompleted","todo","countCompletedTodo","reduce","total","stats","totalTodo","totalCompletedTodo","todoWrap","title","count","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9df3375.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrap\":\"TodoList_todoWrap__192Kg\",\"title\":\"TodoList_title__2lYIT\",\"count\":\"TodoList_count__1aolH\",\"itemList\":\"TodoList_itemList__1UT35\",\"itemListCompleted\":\"TodoList_itemListCompleted__1gqvg TodoList_itemList__1UT35\",\"todoEditorWrap\":\"TodoList_todoEditorWrap__nCYgn\",\"textArea\":\"TodoList_textArea__1vyUe\",\"controlsWrap\":\"TodoList_controlsWrap__1gfXG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__w1vBx\",\"title\":\"Counter_title__2iQLU\",\"value\":\"Counter_value__1YeQp\",\"controls\":\"Counter_controls__3yxfQ\",\"button\":\"Counter_button__1FDPD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorPicker\":\"ColorPicker_colorPicker__vJeSt\",\"title\":\"ColorPicker_title__3hwqK\",\"span\":\"ColorPicker_span__Qk_KO\",\"option\":\"ColorPicker_option__3PNox\",\"activeOptions\":\"ColorPicker_activeOptions__3S5mh ColorPicker_option__3PNox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__KvZNJ\"};","import s from './Layout.module.css';\r\n\r\nconst Layout = ({ children }) => {\r\n  return <div className={s.container}>{children}</div>;\r\n};\r\n\r\nexport default Layout;\r\n","import React, { Component } from 'react';\nimport s from './ColorPicker.module.css';\n\nclass ColorPicker extends Component {\n  state = {\n    activeIdx: 0,\n  };\n\n  setActiveIdx = index => {\n    this.setState({ activeIdx: index });\n  };\n\n  makeClassesName = index => {\n    return this.state.activeIdx === index ? s.activeOptions : s.option;\n  };\n\n  render() {\n    const { activeIdx } = this.state;\n    const { options } = this.props;\n\n    return (\n      <div className={s.colorPicker}>\n        <h2 className={s.title}>ColorPicker</h2>\n        <p className={s.span}>Выбран цвет: {options[activeIdx].label}</p>\n        <div>\n          {options.map(({ color }, index) => (\n            <button\n              type=\"button\"\n              className={this.makeClassesName(index)}\n              key={color}\n              style={{ backgroundColor: color }}\n              onClick={() => this.setActiveIdx(index)}\n            ></button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker;\n","import React, { Component } from 'react';\nimport s from './Counter.module.css';\n\nclass Counter extends Component {\n  state = {\n    value: 0,\n  };\n\n  handleIncrement = () => {\n    this.setState(prevState => {\n      return { value: prevState.value + 1 };\n    });\n  };\n\n  handleDecrement = () => {\n    this.setState(prevState => {\n      return { value: prevState.value - 1 };\n    });\n  };\n\n  render() {\n    return (\n      <div className={s.counter}>\n        <h2 className={s.title}>Counter</h2>\n        <span className={s.value}>{this.state.value}</span>\n        <div className={s.controls}>\n          <button className={s.button} onClick={this.handleIncrement}>\n            Увеличить на 1\n          </button>\n          <button className={s.button} onClick={this.handleDecrement}>\n            Уменьшить на 1\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n","import s from './TodoList.module.css';\n\nconst TodoList = ({ todos, onDelete, onToggleCompleted }) => (\n  <div>\n    {todos.length > 0 && (\n      <ul>\n        {todos.map(({ id, text, completed }) => (\n          <li key={id} className={completed ? s.itemListCompleted : s.itemList}>\n            <p> {text}</p>\n            <div className={s.controlsWrap}>\n              <input\n                type=\"checkbox\"\n                onChange={() => onToggleCompleted(id)}\n                checked={completed}\n              />\n              <button type=\"button\" onClick={() => onDelete(id)}>\n                Удалить\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    )}\n  </div>\n);\n\nexport default TodoList;\n","import { Component } from 'react';\nimport s from './TodoList.module.css';\n\nclass TodoEditor extends Component {\n  state = {\n    message: '',\n  };\n\n  handleChangeMessage = e => {\n    this.setState({ message: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.message);\n\n    this.setState({ message: '' });\n  };\n\n  render() {\n    return (\n      <form className={s.todoEditorWrap} onSubmit={this.handleSubmit}>\n        <textarea\n          className={s.textArea}\n          placeholder=\"Введите текст новой заметки\"\n          onChange={this.handleChangeMessage}\n          value={this.state.message}\n        ></textarea>\n        <button type=\"submit\" disabled={!this.state.message}>\n          Добавить заметку\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default TodoEditor;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport TodoList from './TodoList';\nimport TodoEditor from './TodoEditor';\n\nimport s from './TodoList.module.css';\n\nclass Todo extends Component {\n  state = {\n    todos: this.props.todos,\n  };\n\n  addTodo = text => {\n    const newTodo = {\n      id: uuidv4(),\n      text,\n      completed: false,\n    };\n\n    this.setState(({ todos }) => ({ todos: [newTodo, ...todos] }));\n  };\n\n  deleteTodo = id => {\n    this.setState(({ todos }) => ({\n      todos: todos.filter(todoId => todoId.id !== id),\n    }));\n  };\n\n  toggleCompleted = id => {\n    this.setState(({ todos }) => ({\n      todos: todos.map(todo =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo,\n      ),\n    }));\n  };\n\n  countCompletedTodo = () =>\n    this.state.todos.reduce(\n      (total, todo) => (todo.completed ? total + 1 : total),\n      0,\n    );\n\n  render() {\n    const { todos } = this.state;\n\n    const stats = {\n      totalTodo: this.state.todos.length,\n      totalCompletedTodo: this.countCompletedTodo(),\n    };\n\n    return (\n      <div className={s.todoWrap}>\n        <h2 className={s.title}>Todo List</h2>\n        <p className={s.count}>Количество записей: {stats.totalTodo}</p>\n        <p className={s.count}>\n          Количество выполненых: {stats.totalCompletedTodo}\n        </p>\n        <TodoEditor onSubmit={this.addTodo} />\n        <TodoList\n          todos={todos}\n          onDelete={this.deleteTodo}\n          onToggleCompleted={this.toggleCompleted}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Todo;\n","import Layout from './components/Layout/Layout';\nimport ColorPicker from './components/ColorPicker/ColorPicker';\nimport Counter from './components/Counter/Counter';\nimport Todo from './components/Todo';\nimport './App.css';\n\nconst colorPickerOptions = [\n  { label: 'red', color: '#F44336' },\n  { label: 'green', color: '#4CAF50' },\n  { label: 'blue', color: '#2196F3' },\n  { label: 'grey', color: '#607D8B' },\n  { label: 'pink', color: '#E91E63' },\n  { label: 'indigo', color: '#3F51B5' },\n];\n\nconst todos = [\n  { id: 1, text: 'Выучить Реакт', completed: false },\n  { id: 2, text: 'Выучить роуты', completed: false },\n  { id: 3, text: 'Выучить Редакс', completed: false },\n  { id: 4, text: 'Сделать проект', completed: false },\n];\n\nconst App = () => (\n  <Layout>\n    {/* <Counter />\n    <ColorPicker options={colorPickerOptions} /> */}\n    <Todo todos={todos} />\n  </Layout>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}